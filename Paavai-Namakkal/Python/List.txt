In Python, a list is a built-in data structure that holds an ordered collection of items, which can be of any data type (e.g. integers, strings, or even other lists). Lists are mutable, meaning you can change their contents after creation.

ğŸ”¹ Creating a List

# Empty list
my_list = []

# List of integers
numbers = [1, 2, 3, 4, 5]

# Mixed data types
mixed = [1, "hello", 3.14, True]

# Nested list
nested = [1, [2, 3], 4]

ğŸ”¹ Common List Operations

numbers = [1,2,3,4]
print(numbers)
print(numbers[2]) # forward
print(numbers[-2]) # backward

numbers.append(5) # adding at last
print(numbers)
numbers.insert(3,99) # add ele at index (index , value)
print(numbers)

numbers.remove(3) #remove from ele from list
print(numbers)
popped = numbers.pop() #always remove last ele # 5
print(popped)
print(numbers)
print(len(numbers)) # length of list

print(numbers[1:3]) # slicing 

numbers.insert(1,101)
print(numbers)
# numbers.sort()
# print(numbers) # sort then print the values # ascending
# numbers.sort(reverse=True) 
# print(numbers) # descending order

sortednums = sorted(numbers)
print(numbers) # original list
print(sortednums) # copy of original list with sorted order

items = ["roshan","abc","aac","paavai","namakkal"]
print(items)
items.sort()
print(items) # alphabetical order
# 2D list
matrix = [
    [1,2,3],
    [4,5,6],
    [7,8,9]
    ]
print(matrix)
print(matrix[0]) # print only 1st list
print(matrix[0:]) # print from 0 to last index
print(matrix[1][2]) # print ele from 2 list last element # prints -> 6

-------------------------------------------------------------------
1.Insertion of New Product IDs

n = int(input())

items = list(map(int,input().split())) # input

product = int(input())

index = 0

while (index < n) and (items[index] < product):
  index += 1 # 2

items.insert(index,product)
print(*items)
-------------------------------------------------------------------
2.Second Occurrence

n = int(input())
arr = list(map(int, input().split()))

unique_elements = list(set(arr)) # set do not allow duplicates

if len(unique_elements) < 2:
    print(0)
else:
    unique_elements.sort(reverse=True)

    second_largest = unique_elements[1]

    count = arr.count(second_largest)
    print(count)
-------------------------------------------------------------------------------------
3.Dinner Dishes

N = int(input()) # 4
A = list(map(int, input().split()))
# 1, 10 5, 15

if N < 2:
    print(0)
else:
    A.sort() # 50 50 50 => 100
    print(A[-1] + A[-2])
--------------------------------------------------------------------------------------
4.Nick's check

n = int(input()) # 6 

items = list(map(int,input().split())) # 3 7 2 5 4 6

items.sort() # 2 3 6 7 => 1 or => 0

flag = 1

for i in range(1,len(items)): # 1 to 3 index
  if items[i] != items[i-1] + 1: # 6 != 4 => t
    flag = 0
    break 

print(flag) # 0
----------------------------------------------------------------------------------------
5.The lost Digit

N = int(input())                       
A = list(map(int, input().split()))          

sumnat = N * (N + 1) // 2 # formula for sum of natural numbers               
# 10
actual_sum = sum(A) # sum => keyword(it will add all values in list)

missing_number = sumnat - actual_sum   

print(missing_number)
-----------------------------------------------------------------------------------
6.Alice's Magical shoes!

n = int(input()) # 4

items = list(map(int,input().split())) # 12 21 3 4

count = 0
for i in items: # 4
    if i%3==0:
        count += 1 # 3

if count > 0:
    print(count) # 3
else:
    print(0)
------------------------------------------------------------------------------------
7.Data Recovery - Reversing the Sensor Log

n = int(input())

items = list(map(int,input().split()))
items.reverse()
print(*items)
-------------------------------------------------------------------------------------
8.Playing with Numbers

n = int(input()) # 5

items = list(map(int,input().split()))
# 1 2 3 4 5
# 0 1 2 3 4
val  = int(input())
# 3
print(*items[val:],end=' ') # 4 5
print(*items[0:val],end=' ') # 1 2 3
# 4 5 1 2 3
------------------------------------------------------------------------------------
9.Unsold Products

n = int(input())
# 7
items = list(map(int,input().split()))
# 1 2 0 3 0 5 6

duplicate = [] 
count = 0

for i in items:
  if i != 0:
    duplicate.append(i) # 1 2 3 5 6   
    count += 1 # 5

for i in range(count,len(items)):
  duplicate.append(0)

print(*duplicate)
-----------------------------------------------------------------------------------
10.Finding the Median of Positive Product IDs

sedn = int(input())
items = list(map(int, input().split()))

dupl = [i for i in items if i >= 0]

if not dupl:
    print(-1)
else:
    mid = len(dupl) // 2
    print(dupl[mid])
---------------------------------------------------------------------------------------



